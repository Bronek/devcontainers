{
    //  devcontainer.json is mapped to JSONC - hooray for comments !
    "name": "${devcontainerId}",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            "CLANG_RELEASE": "19",
            "GCC_RELEASE": "14"
        }
    },
    "initializeCommand": [
        "/bin/mkdir",
        "-p",
        "/tmp/devcontainer-${localEnv:UID}/${devcontainerId}"
    ],
    "containerEnv": {
        "DEVCONTAINER_ID": "${devcontainerId}",
        // Pass ssh-agent sock for git authentication
        "SSH_AUTH_SOCK": "/run/user/${localEnv:UID}/ssh",
        "WORK": "${localWorkspaceFolder}"
    },
    "init": true,
    "customizations": {
        "vscode": {
            "extensions": [
                "llvm-vs-code-extensions.vscode-clangd",
                "xaver.clang-format",
                "GitHub.vscode-pull-request-github",
                "ms-azuretools.vscode-docker",
                "github.vscode-github-actions",
                "GitHub.remotehub",
                "ms-vscode.azure-repos",
                "ms-vscode.remote-repositories",
                "twxs.cmake",
                "ms-vscode.cpptools-themes",
                "GitHub.github-vscode-theme",
                "bierner.markdown-preview-github-styles",
                "jeff-hykin.better-cpp-syntax",
                "ajshort.include-autocomplete",
                "donjayamanne.githistory",
                "ms-vscode.cmake-tools",
                "eamodio.gitlens",
                "ms-vsliveshare.vsliveshare",
                "JetBrains.jetbrains-ai-assistant"
            ]
        }
    },
    //  This allows the `compile_commands.json` to be shared by both host and container
    "workspaceMount": "source=${localWorkspaceFolder},target=${localWorkspaceFolder},type=bind,consistency=cached",
    "workspaceFolder": "${localWorkspaceFolder}",
    "mounts": [
        {
            "source": "/tmp/devcontainer-${localEnv:UID}/${devcontainerId}",
            "target": "/tmp",
            "type": "bind"
        },
        {
            // Share rippled data with the host
            "source": "${localEnv:HOME}/.rippled",
            "target": "${localEnv:HOME}/.rippled",
            "type": "bind"
        },
        {
            // Pass ssh-agent sock for git authentication
            "source": "${localEnv:SSH_AUTH_SOCK}",
            "target": "/run/user/${localEnv:UID}/ssh",
            "type": "bind"
        },
        {
            // This allows sharing of ccache data between containers
            "source": "ccache_data",
            "target": "/root/.ccache",
            "type": "volume"
        },
        {
            // This allows sharing of conan data between containers
            "source": "conan2_data",
            "target": "/root/.conan2",
            "type": "volume"
        }
    ],
    // For debugging
    "capAdd": [
        "SYS_PTRACE"
    ],
    "securityOpt": [
        "seccomp=unconfined"
    ]
}
